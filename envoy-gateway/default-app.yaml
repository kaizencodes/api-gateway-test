# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: httpbin
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: httpbin
#   labels:
#     app: httpbin
#     service: httpbin
# spec:
#   ports:
#     - name: http
#       port: 80
#       targetPort: 80
#   selector:
#     app: httpbin
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: httpbin
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: httpbin
#       version: v1
#   template:
#     metadata:
#       labels:
#         app: httpbin
#         version: v1
#     spec:
#       serviceAccountName: httpbin
#       containers:
#         - image: docker.io/kennethreitz/httpbin
#           imagePullPolicy: IfNotPresent
#           name: httpbin
#           ports:
#             - containerPort: 80

apiVersion: v1
kind: ServiceAccount
metadata:
  name: hello-kube
---
apiVersion: v1
kind: Service
metadata:
  name: hello-kube
  labels:
    app: hello-kube
    service: hello-kube
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: hello-kube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-kube
  template:
    metadata:
      labels:
        app: hello-kube
    spec:
      serviceAccountName: hello-kube
      containers:
      - name: hello-kube
        image: paulbouwer/hello-kubernetes:1.8
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080
        env:
        - name: MESSAGE
          value: This is working!
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: hello-kube
spec:
  parentRefs:
    - name: eg
  # hostnames:
  #   - "www.example.com"
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: hello-kube
          port: 80
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /
